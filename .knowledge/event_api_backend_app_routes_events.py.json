{"is_source_file": true, "format": "Python", "description": "This file defines Flask route handlers for the events API, enabling CRUD operations on event data. It includes route classes for listing, creating, retrieving, updating, and deleting events, and utilizes SQLAlchemy for database interactions and Marshmallow for data serialization.", "external_files": ["app/models.py", "app/schemas.py"], "external_methods": ["flask.request", "flask.jsonify", "flask.views.MethodView", "flask_smorest.Blueprint", "flask_smorest.abort", "dotenv.load_dotenv", "sqlalchemy.exc.SQLAlchemyError", "datetime.datetime", "app.models.db", "app.models.Event", "app.schemas.EventSchema"], "published": ["blp"], "classes": [{"name": "EventListResource", "description": "Handles listing all events and creating new events."}, {"name": "EventResource", "description": "Handles retrieving, updating, and deleting a specific event by ID."}], "methods": [{"name": "get(self)", "description": "Returns a list of all events sorted by start time.", "scope": "EventListResource", "scopeKind": "class"}, {"name": "post(self, new_data)", "description": "Creates a new event with provided data.", "scope": "EventListResource", "scopeKind": "class"}, {"name": "get(self, event_id)", "description": "Retrieves an event by its ID.", "scope": "EventResource", "scopeKind": "class"}, {"name": "patch(self, update_data, event_id)", "description": "Partially updates an event by its ID.", "scope": "EventResource", "scopeKind": "class"}, {"name": "delete(self, event_id)", "description": "Deletes an event by its ID.", "scope": "EventResource", "scopeKind": "class"}], "calls": ["Event.query.order_by(Event.start_time.asc()).all()", "Event.query.get(event_id)", "db.session.add(event)", "db.session.commit()", "db.session.rollback()", "db.session.delete(event)"], "search-terms": ["events API routes", "Flask event management", "Event CRUD endpoints", "Event route classes", "EventSchema usage"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "EventListResource", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^class EventListResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EventResource", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^class EventResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^    def delete(self, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, event_id)", "scope": "EventResource", "scopeKind": "class"}, {"_type": "tag", "name": "event_schema", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^event_schema = EventSchema()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "events_schema", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^events_schema = EventSchema(many=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "EventListResource", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^    def get(self, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, event_id)", "scope": "EventResource", "scopeKind": "class"}, {"_type": "tag", "name": "patch", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^    def patch(self, update_data, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, update_data, event_id)", "scope": "EventResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/routes/events.py", "pattern": "/^    def post(self, new_data):$/", "language": "Python", "kind": "member", "signature": "(self, new_data)", "scope": "EventListResource", "scopeKind": "class"}], "hash": "2d008cc1eb5cea02f33e3e0158122133", "format-version": 4, "code-base-name": "event_api_backend", "filename": "event_api_backend/app/routes/events.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "event_schema = EventSchema()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "events_schema = EventSchema(many=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}