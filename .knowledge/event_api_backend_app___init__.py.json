{"is_source_file": true, "format": "Python", "description": "This is the main initialization script for a Flask-based API backend, setting up the application, configuration, extensions, and error handlers.", "external_files": [".models", ".routes.health", ".routes.events"], "external_methods": ["load_dotenv", "db.init_app", "api.register_blueprint", "app.app_context", "db.create_all"], "published": [], "classes": [], "methods": [{"name": "bad_request(e)", "description": "Error handler for 400 Bad Request responses.", "scope": "", "scopeKind": ""}, {"name": "not_found(e)", "description": "Error handler for 404 Not Found responses.", "scope": "", "scopeKind": ""}, {"name": "internal_error(e)", "description": "Error handler for 500 Internal Server Error responses.", "scope": "", "scopeKind": ""}, {"name": "setup_database(app)", "description": "Function to create database tables if not existing.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv()", "db.init_app(app)", "api.register_blueprint(health_blp)", "api.register_blueprint(events_blp)", "app.app_context()", "db.create_all()"], "search-terms": ["Flask app initialization", "BluePrint registration", "Error handlers", "SQLAlchemy setup", "Environment configuration"], "state": 2, "file_id": 5, "knowledge_revision": 21, "git_revision": "f3f69b652bb38594b48d57de49f110d9a7e1c71e", "revision_history": [{"12": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}, {"20": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}, {"21": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}], "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/events.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bad_request", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def bad_request(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "events_blp", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^from .routes.events import blp as events_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "internal_error", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def internal_error(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "not_found", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def not_found(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "setup_database", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def setup_database(app):$/", "language": "Python", "kind": "function", "signature": "(app)"}], "hash": "086bb2128ef9d8d373cace50f487d927", "format-version": 4, "code-base-name": "event_api_backend", "filename": "event_api_backend/app/__init__.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/events.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}