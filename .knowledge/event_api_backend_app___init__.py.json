{"is_source_file": true, "format": "Python", "description": "This is the main application initializer for a Flask-based web API. It sets up environment loading, Flask app configuration, database connection, API versioning, CORS, and blueprint registration, along with error handlers and database setup.", "external_files": [".env", "./models.py", "./routes/health.py", "./routes/events.py"], "external_methods": ["load_dotenv", "db.init_app", "api.register_blueprint", "db.create_all", "jsonify"], "published": ["app"], "classes": [], "methods": [{"name": "bad_request(e)", "description": "Handles 400 errors, returns JSON error message.", "scope": "", "scopeKind": ""}, {"name": "not_found(e)", "description": "Handles 404 errors, returns JSON error message.", "scope": "", "scopeKind": ""}, {"name": "internal_error(e)", "description": "Handles 500 errors, returns JSON error message.", "scope": "", "scopeKind": ""}, {"name": "setup_database(app)", "description": "Creates database tables if they don't exist, within app context.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv()", "db.init_app(app)", "api.register_blueprint(health_blp)", "api.register_blueprint(events_blp)", "setup_database(app)", "db.create_all()", "jsonify()"], "search-terms": ["Flask app setup", "API initialization", "CORS configuration", "blueprint registration", "error handling", "database setup"], "state": 2, "file_id": 5, "knowledge_revision": 26, "git_revision": "055cdd325b96532b7c5cd3860bcf3958efd6d2f4", "revision_history": [{"12": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}, {"20": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}, {"21": "f3f69b652bb38594b48d57de49f110d9a7e1c71e"}, {"26": "055cdd325b96532b7c5cd3860bcf3958efd6d2f4"}], "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/instance\\/events.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bad_request", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def bad_request(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "events_blp", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^from .routes.events import blp as events_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "internal_error", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def internal_error(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "not_found", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def not_found(e):$/", "language": "Python", "kind": "function", "signature": "(e)"}, {"_type": "tag", "name": "setup_database", "path": "/home/kavia/workspace/code-generation/event-management-api-54af4371/event_api_backend/app/__init__.py", "pattern": "/^def setup_database(app):$/", "language": "Python", "kind": "function", "signature": "(app)"}], "hash": "acec780b246ba075c09891e7e18d2745", "format-version": 4, "code-base-name": "event_api_backend", "filename": "event_api_backend/app/__init__.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/instance\\/events.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}